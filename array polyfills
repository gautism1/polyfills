let arr = [1, 2, 3, 2, 1, 3];

// let x = arr.map((item) =>
//   item * 2
// );
// console.log(x);

Array.prototype.mymap = function(callback) 
{
  var res = []

  for (let i = 0; i < this.length; i++)
   {
    res[i] = callback(this[i]);
    }

  return res;
};

function fn(x) {
  return x * 2;
}
console.log(arr.mymap((item)=>item*2))



FOREACH POLYFILLL

let arr = [1, 2, 3, 2, 1, 3];

  /*   arr.forEach((item,index) =>
            console.log( item * 2)
      );
      */
Array.prototype.myforeach = function(callback) 
{
  for (let i = 0; i < this.length; i++)
   {
    callback(this[i]);
    }
 
};

function fn(x) {
  console.log( x * 2);
}
 arr.myforeach(fn);
 
 
 FIND POLYFILL
 
 let arr = [1, 2, 3, 2, 1, 3];

/* let x=arr.find((item,index) =>
           item>2
      );
      console.log(x);
       */
      Array.prototype.myfind = function(callback) 
      {
      
        for (let i = 0; i < this.length; i++)
         {
          if(callback(this[i]))
            return this[i]
          }
       
      };
      
      function fn(x) {
       if(x>2)
       return true;
      }
       console.log(arr.myfind(fn))
       
       FILTER POLYFILLL
       let arr = [1, 2, 3, 2, 1, 3];

/* let x=arr.filter((item,index) =>
           item>2
      );
      console.log(x);
       */
      Array.prototype.myfilter = function(callback) 
      {
      let res=[];
      let a=0;
        for (let i = 0; i < this.length; i++)
         {
          if(callback(this[i]))
            {res[a]= this[i];a++
            }
          }
       return res;
      };
      
      function fn(x) {
       if(x>2)
       return true;
       
      }
       console.log(arr.myfilter(fn))
